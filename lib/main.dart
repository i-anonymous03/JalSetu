import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:jalsetu/firebase_options.dart';
import 'package:jalsetu/routes.dart';
import 'package:jalsetu/src/theme.dart';
import 'package:provider/provider.dart'; 
import 'package:jalsetu/src/services/localization_provider.dart'; 

// üåê Localization imports
import 'package:flutter_localizations/flutter_localizations.dart';
import 'generated/app_localizations.dart';

Future<void> main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  
  runApp(
    // 1. Wrap the app with ChangeNotifierProvider to manage the language state
    ChangeNotifierProvider(
      create: (context) => LocalizationProvider(),
      child: const MyApp(),
    ),
  );
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    // 2. Consume the currentLocale from the Provider
    final localizationProvider = Provider.of<LocalizationProvider>(context);

    // Show a loading indicator until the preferred locale is loaded from local storage
    if (localizationProvider.currentLocale == null) {
      return const MaterialApp(
        home: Scaffold(
          body: Center(child: CircularProgressIndicator()),
        ),
      );
    }
    
    return MaterialApp(
      // ------------------------------------------------------------
      // üåç Localization + Theme + Routing setup for JalSetu
      // ------------------------------------------------------------

      // 3. Use the dynamic locale from the provider. This rebuilds the MaterialApp
      // whenever setLocale is called in the LocalizationProvider.
      locale: localizationProvider.currentLocale,

      // App title will automatically translate (once added in ARB)
      title: 'JalSetu', 

      debugShowCheckedModeBanner: false,
      theme: AppTheme.lightTheme,

      // üåê Localization delegates (connects your .arb translation files)
      // üéØ FIX 2: Removed 'const' keyword because AppLocalizations.delegate is a computed, 
      // non-constant value generated by the tooling.
      localizationsDelegates: [
        AppLocalizations.delegate,
        GlobalMaterialLocalizations.delegate,
        GlobalWidgetsLocalizations.delegate,
        GlobalCupertinoLocalizations.delegate,
      ],

      // üó£ Supported languages defined in the LocalizationProvider
      supportedLocales: LocalizationProvider.supportedLocales,

      // üß≠ App navigation routes
      initialRoute: AppRoutes.root,
      routes: AppRoutes.routes,
    );
  }
}
